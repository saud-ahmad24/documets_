Let's walk through a **practical example** to explain **name servers** and **DNS**.

### Scenario: 
You own a domain, say `example.com`, and you want to host a website for it.

---

### **Step 1: Domain Registration**
You register `example.com` through a domain registrar like Enom. When registering, you need to associate your domain with **name servers**. These name servers will point to where your website and related services (like email) are hosted.

- **Default Option**: If you select Enom's name servers (`UseDNS=default`), Enom will automatically manage the DNS for you.
- **Custom Option**: If you want to point the domain to your own web hosting provider (e.g., AWS, GoDaddy, or another service), you would specify your own name servers using the `NS1`, `NS2`, etc., parameters.

---

### **Step 2: Understanding DNS and Name Servers**
#### **DNS (Domain Name System)**:
DNS is a system that maps human-readable domain names like `example.com` to machine-readable IP addresses like `192.168.1.1`. Without DNS, you would have to type an IP address every time you wanted to access a website.

For instance, when you type `example.com` into a web browser, the browser asks the DNS servers:
- "Hey, what's the IP address for `example.com`?"
- The DNS server looks up the DNS records and replies with the IP address (e.g., `192.168.1.1`), allowing the browser to load the website.

#### **Name Servers**:
Name servers are like the "directory" where DNS records are stored. When someone types `example.com` into their browser, the DNS query is sent to the **name servers** associated with the domain. These name servers store the records (A record, MX record, etc.) that tell the DNS system where to find the website or email servers.

---

### **Step 3: Setting Up DNS Records**
Imagine you have a website hosted on a server with IP address `123.456.789.101`. Here's how you would set it up:

1. **Default Name Servers** (Enom's DNS):
   - You register `example.com` and choose Enom's default name servers.
   - Enom automatically creates DNS records (e.g., an A record) that point `example.com` to `123.456.789.101`.
   - **When someone visits `example.com`,** Enom’s DNS servers resolve that domain to the IP address of your website.

2. **Custom Name Servers** (Using Your Own Hosting Provider's DNS):
   - You host your website on AWS, and AWS provides name servers like:
     - `ns1.awsdns.com`
     - `ns2.awsdns.com`
   - You register `example.com` and specify AWS’s name servers in the registration request.
   - **When someone visits `example.com`,** the DNS query goes to AWS's name servers, which have DNS records (e.g., an A record pointing to your server IP address) that resolve the domain to the correct server.

---

### **Step 4: Practical Use Case – Custom Name Servers**
Let’s walk through a **real-world example** where you’re hosting a website and email for `example.com` using custom name servers:

- You’ve signed up for web hosting at `WebHostingProvider.com`, and they provide custom name servers like:
  - `ns1.webhostingprovider.com`
  - `ns2.webhostingprovider.com`

You’ve registered `example.com` through Enom and want to use these name servers.

#### **API Request to Set Custom Name Servers:**
```plaintext
command=Purchase
UID=YourAccountID
PW=YourApiToken
SLD=example
TLD=com
NS1=ns1.webhostingprovider.com
NS2=ns2.webhostingprovider.com
```

This request tells Enom to:
1. Register `example.com`.
2. Use `ns1.webhostingprovider.com` and `ns2.webhostingprovider.com` as the name servers for your domain.

---

### **Step 5: DNS Records at the Name Servers**
After the name servers are set, you will configure DNS records (usually done through the web hosting provider’s control panel).

1. **A Record**: Points the domain to the server hosting your website.
   - `A record for example.com` → `123.456.789.101` (IP address of your website)
   
2. **MX Record**: Points to the mail server for email services.
   - `MX record for example.com` → `mail.example.com` (mail server's address)

3. **CNAME Record**: Points subdomains (e.g., `www.example.com`) to a primary domain.
   - `CNAME record for www.example.com` → `example.com`

---

### **Step 6: What Happens When Someone Visits `example.com`?**
- **Visitor's browser** sends a DNS query asking, "What’s the IP address for `example.com`?"
- The DNS system checks the **name servers** (e.g., `ns1.webhostingprovider.com`), which have the DNS records.
- The name server responds with the **IP address** (e.g., `123.456.789.101`), and the browser connects to the server to load the website.

---

### **Summary:**
- **DNS** translates human-readable domain names to IP addresses that computers can understand.
- **Name servers** are the entities that store and provide the DNS records for a domain.
- Using **default name servers** means your domain registrar manages DNS for you, whereas **custom name servers** allow you to specify the DNS settings, often managed by your hosting provider.

This entire process ensures that when someone types `example.com`, the browser can find and load your website using DNS and name servers!