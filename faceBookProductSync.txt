const axios = require('axios');
var async = require('async');
  const accessToken = 'EAAXrdd63bq4BADg1jhZBdxP2ZBvdLaswWJ7WihKAQNXdw3RXMRkMVZCXrCmt99CK1WtmbZARQkZCs6LNy43wcmwxuYsaiWE2slH6lGZAKzZAUtvvOuyQEeHXjZCS3R0DDeuSQDxHaitcb78TvpWlIYuXluZBFxFZCPqS0qP3N1IAx7BioSDVeudcqd';
  const catalogId = '670673307757604';
  const url = `https://graph.facebook.com/v17.0/${catalogId}/products`;
  const params = {
    access_token: accessToken,
    fields: 'id,retailer_id,name,image_url,sale_price,brand,category,color,currency,condition,description,availability,applinks,price,origin_country,inventory,quantity_to_sell_on_facebook,shipping_weight_unit,shipping_weight_value,url,visibility,wa_compliance_category,retailer_product_group_id'
  };
  // Function to make the API request
  async function getLeadData(url, params) {
    try {
      const response = await axios.get(url, { params });
      return response.data;
    } catch (error) {
      throw error;
    }
  }
  // Recursive function to handle pagination
  async function getAllLeadData(url, params) {
    let allData = [];
    let nextPage = url;
    while (nextPage) {
      try {
        const data = await getLeadData(nextPage, params);
        allData = allData.concat(data.data);
        if (data.paging && data.paging.next) {
          nextPage = data.paging.next;
        } else {
          nextPage = null;
        }
      } catch (error) {
        throw error;
      }
    }
    return allData;
  }
  (async () => {
    try {
      const allLeads = await getAllLeadData(url, params);
    //   console.log('sxdfgdfgdfgdfgfd',allLeads);
        async.forEachSeries(allLeads, (allLead, next_allLeads) => {
            // console.log(allLead);
            const priceString = allLead.price;
            const priceWithoutCurrencySymbol = priceString.replace('₹', ''); // Remove the currency symbol
            const priceNumber = parseFloat(priceWithoutCurrencySymbol); // Parse the string as a float
            if(allLead.retailer_id == 37777){
            let data = JSON.stringify({
                "authToken": "U2FsdGVkX1/YRnzJ1ps92qSMSX1q9dKDCjDjLN5rHMXSRYNCkDYiJDWjl1+S83fCmgTp2Y+4XeeHpazM4X77gZZmeghhATbP80BYN7HupaNQQndvUeXJ9XJ/+bZaaUTrXNVJOa6oW0FS21pSZBHFsNCRMs/4tAEfDgzSLv4oyR4a/cYLJt54IP7kPVftNQ5W",
                "title": allLead.name,
                "description": allLead.description,
                "productUrl": allLead.url,
                "image": allLead.image_url,
                "otherimages": "",
                "price": priceNumber,
                "sku": allLead.brand+''+allLead.retailer_id,
                "category": allLead.brand,
                "childcategory": "",
                "weighttype": "kg",
                "availibility": allLead.availability,
                "condition": allLead.condition,
                "currency": allLead.currency,
                "country": allLead.origin_country,
                "productStatus": "active",
                "platform": "Facebook Sync",
                "groupId": "",
                "variants": [],
                "ManufacturerInfo": "",
                "ImporterName": "",
                "ImporterAddressStreet1": "",
                "ImporterAddressStreet2": "",
                "ImporterAddressCity": "",
                "ImporterAddressRegion": "",
                "ImporterAddressPostalCode": "",
                "ImporterAddressCountry": ""
              });
              let config = {
                method: 'post',
                maxBodyLength: Infinity,
                url: 'https://app.11za.in/apis/product/add',
                headers: { 
                  'Content-Type': 'application/json'
                },
                data : data
              };
              axios.request(config)
              .then((response) => {
                console.log(JSON.stringify(response.data));
                next_allLeads();
              })
              .catch((error) => {
                console.log('ERRRRRRRRRRRRRRRRRRRRR',error);
              });
            }else{
                console.log('allLead.retailer_id::::::::::::::::',allLead.retailer_id);
                next_allLeads();
            }
        }, () => {
            console.log('DONE::::::::::::::::::::::::::');
        });
      // Process and analyze the lead data
    } catch (err) {
      console.error('Error:', err.message);
    }
  })();


















const axios = require('axios');
var async = require('async');
let Productsmodel = require("./models/customers/products.model");
  const accessToken = 'EAAXrdd63bq4BADg1jhZBdxP2ZBvdLaswWJ7WihKAQNXdw3RXMRkMVZCXrCmt99CK1WtmbZARQkZCs6LNy43wcmwxuYsaiWE2slH6lGZAKzZAUtvvOuyQEeHXjZCS3R0DDeuSQDxHaitcb78TvpWlIYuXluZBFxFZCPqS0qP3N1IAx7BioSDVeudcqd';
  const catalogId = '883942103305076';
  const url = `https://graph.facebook.com/v17.0/${catalogId}/products`;
  const params = {
    access_token: accessToken,
    fields: 'id,retailer_id,name,image_url,sale_price,brand,category,color,currency,condition,description,availability,applinks,price,origin_country,inventory,quantity_to_sell_on_facebook,shipping_weight_unit,shipping_weight_value,url,visibility,wa_compliance_category,retailer_product_group_id'
  };
  // Function to make the API request
  async function getLeadData(url, params) {
    try {
      const response = await axios.get(url, { params });
      return response.data;
    } catch (error) {
      throw error;
    }
  }
  // Recursive function to handle pagination
  async function getAllLeadData(url, params) {
    let allData = [];
    let nextPage = url;
    while (nextPage) {
      try {
        const data = await getLeadData(nextPage, params);
        allData = allData.concat(data.data);
        if (data.paging && data.paging.next) {
          nextPage = data.paging.next;
        } else {
          nextPage = null;
        }
      } catch (error) {
        throw error;
      }
    }
    return allData;
  }
  (async () => {
    try {
      const allLeads = await getAllLeadData(url, params);
        let secondary = mongoConnection.useDb('db_voltt_india');
    //   console.log('sxdfgdfgdfgdfgfd',allLeads);
        async.forEachSeries(allLeads, (allLead, next_allLeads) => {
            (async () => {
                await secondary.model(constants.MODELS.products, Productsmodel).updateOne(
                    { productId: parseInt(allLead.retailer_id) },
                    { $set: {'	':allLead.id} }
                );
                console.log(allLead);
                next_allLeads();
            })().catch((error) => {
                console.log('---10', error);
                return ResponseManager.onError(error, res);
            });
            
            const priceString = allLead.price;
            const priceWithoutCurrencySymbol = priceString.replace('₹', ''); // Remove the currency symbol
            const priceNumber = parseFloat(priceWithoutCurrencySymbol); // Parse the string as a float
            
            // if(allLead.retailer_id == 37777){
            // let data = JSON.stringify({
            //     "authToken": "U2FsdGVkX1/YRnzJ1ps92qSMSX1q9dKDCjDjLN5rHMXSRYNCkDYiJDWjl1+S83fCmgTp2Y+4XeeHpazM4X77gZZmeghhATbP80BYN7HupaNQQndvUeXJ9XJ/+bZaaUTrXNVJOa6oW0FS21pSZBHFsNCRMs/4tAEfDgzSLv4oyR4a/cYLJt54IP7kPVftNQ5W",
            //     "title": allLead.name,
            //     "description": allLead.description,
            //     "productUrl": allLead.url,
            //     "image": allLead.image_url,
            //     "otherimages": "",
            //     "price": priceNumber,
            //     "sku": allLead.brand+''+allLead.retailer_id,
            //     "category": allLead.brand,
            //     "childcategory": "",
            //     "weighttype": "kg",
            //     "availibility": allLead.availability,
            //     "condition": allLead.condition,
            //     "currency": allLead.currency,
            //     "country": allLead.origin_country,
            //     "productStatus": "active",
            //     "platform": "Facebook Sync",
            //     "groupId": "",
            //     "variants": [],
            //     "ManufacturerInfo": "",
            //     "ImporterName": "",
            //     "ImporterAddressStreet1": "",
            //     "ImporterAddressStreet2": "",
            //     "ImporterAddressCity": "",
            //     "ImporterAddressRegion": "",
            //     "ImporterAddressPostalCode": "",
            //     "ImporterAddressCountry": ""
            //   });
            //   let config = {
            //     method: 'post',
            //     maxBodyLength: Infinity,
            //     url: 'https://app.11za.in/apis/product/add',
            //     headers: { 
            //       'Content-Type': 'application/json'
            //     },
            //     data : data
            //   };
            //   axios.request(config)
            //   .then((response) => {
            //     console.log(JSON.stringify(response.data));
            //     next_allLeads();
            //   })
            //   .catch((error) => {
            //     console.log('ERRRRRRRRRRRRRRRRRRRRR',error);
            //   });
            // }else{
            //     console.log('allLead.retailer_id::::::::::::::::',allLead.retailer_id);
            //     next_allLeads();
            // }
        }, () => {
            console.log('DONE::::::::::::::::::::::::::');
        });
      // Process and analyze the lead data
    } catch (err) {
      console.error('Error:', err.message);
    }
  })();